substitutions:
  _GCS_CACHE_BUCKET: cloudbuild-m2repo

steps:
  # load the cache from GCS if it exists
  - name: gcr.io/cloud-builders/gsutil
    id: 'load-mvn-cache'
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        (
          ls -la /root/.m2
          gsutil cp gs://${PROJECT_ID}_${_GCS_CACHE_BUCKET}/m2-cache.tar.gz /tmp/m2-cache.tar.gz &&
          tar -xzf /tmp/m2-cache.tar.gz
        ) || echo 'Cache not found'
    volumes:
      - name: m2
        path: /root/.m2/

  #build service
  - name: 'maven:3.6.2-jdk-12'
    id: 'mvn build'
    entrypoint: 'mvn'
    args: ['clean','package','-f','kpdi-api/pom.xml']
    volumes:
      - name: m2
        path: /root/.m2/

  # cache the /root/.m2 folder and upload it to GCS bucket
  - name: gcr.io/cloud-builders/gsutil
    id: 'save-mvn-cache'
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        tar -czf /tmp/m2-cache.tar.gz .m2 &&
        gsutil cp /tmp/m2-cache.tar.gz gs://${PROJECT_ID}_${_GCS_CACHE_BUCKET}/m2-cache.tar.gz
    volumes:
      - name: m2
        path: /root/.m2/
  
  #build and push image
  - name: gcr.io/cloud-builders/docker
    id: 'build-and-push-image'
    entrypoint: bash
    args:
        - -c
        - |
          docker build -t ${_IMAGE_NAME}:${_SHORT_SHA} \
                       -t ${_IMAGE_NAME}:${_ENV} \
                       -t ${_IMAGE_NAME}:${_VERSION} \
                       -f Dockerfile .
          docker push ${_IMAGE_NAME}:${_SHORT_SHA}
          docker push ${_IMAGE_NAME}:${_ENV}
          docker push ${_IMAGE_NAME}:${_VERSION}



timeout: 9000s
tags: ['build','${_ENV}','${_VERSION}','${_SHORT_SHA}']
